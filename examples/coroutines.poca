function corofun(i) {
  while (i < 1111) {
    puts('corofun state: ' ~ coro.state());
    Coroutine.yield(i += Coroutine.get());
  }

  puts('corofun ended!');
}

var coro = Coroutine.create(corofun, 1000);

puts('coro alive: ' ~ coro.alive());             //  true
puts('coro resumed: ' ~ coro.resumed());        //  false
puts('coro terminated: ' ~ coro.terminated()); //   false

puts();
puts("Let's go!");

puts();
puts(coro.resume(100));

puts('coro alive: ' ~ coro.alive());             //  true
puts('coro resumed: ' ~ coro.resumed());        //   true
puts('coro terminated: ' ~ coro.terminated()); //   false

puts('coro state: ' ~ coro.state());         //   outside

puts();
puts(coro.resume(10));

puts('coro alive: ' ~ coro.alive());             //  true
puts('coro resumed: ' ~ coro.resumed());        //   true
puts('coro terminated: ' ~ coro.terminated()); //   false

puts();
puts(coro.resume(1));

puts('coro alive: ' ~ coro.alive());             //  true
puts('coro resumed: ' ~ coro.resumed());        //   true
puts('coro terminated: ' ~ coro.terminated()); //   false

puts();
coro.resume(); // this resume will terminate the loop

// corofun ended!

puts('coro alive: ' ~ coro.alive());             // false
puts('coro resumed: ' ~ coro.resumed());        //   true
puts('coro terminated: ' ~ coro.terminated()); //    true
