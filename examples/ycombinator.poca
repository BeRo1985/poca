
(function(){

  let ta = DateTime.now();

  let c = 0, d = 0;

  let fib = ((f) => {
    return f(f);
  })(
    (f) => {
      return (x, l = 0) => {
        if(x < 2){
          return x;
        }else{
          c++;
          d = (d < l) ? l : d;
          let tmp = f(f);
          return tmp(x - 1, l + 1) + tmp(x - 2, l + 1);
        }
      }
    }
  );
  for(let i = 1; i < 31; i++){
    print(fib(i), " ");
  }
  print("\n");

  let tb = DateTime.now();

  breakpoint;
  puts("        Call count: ", c);
  puts("Maximum call depth: ", d);
  puts("      Elapsed time: ", DateTime.milliseconds(tb - ta), " ms");

})();
