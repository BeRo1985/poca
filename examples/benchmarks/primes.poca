
function searchPrimes(let from,let to){
  let (dummy,primes,n,i,j,isPrime)=(0,0,0,0,0,0);
  from=+from;
  to=+to;
  for(n=from;n<=to;++n){
    i=((n%2)==0)?2:3;
    j=n**0.5;
    isPrime=1;
    while(i<=j){
      if((n%i)==0){
        isPrime=0;
        break;
      }
      i+=2;
    }
    primes+=isPrime;
  }
  return primes;
}

function isprime(let n){
  n = +n;
  for(let i = 2; i < n; i++){
    if((n % i) == 0){
      return false;
    }
  }
  return true;
}

function primes(let n){
  let count = 0;
  n = +n;
  for(let i = 2; i <= n; i++){
    if(isprime(i)){
      count++;
    }
  }
  return count;
}

function primes2(let n){
  n = +n;
  let count = 0, isPrime = 0, i = 0, j = 0;
  for(i = 2; i <= n; i++){
    isPrime = 1; 
    for(j = 2; j < i; j++){
      if((i % j) == 0){
        isPrime = 0;
        break;
      }
    }
    count += isPrime;
  }
  return count;
}

let N = 200000, ta = 0, tb = 0, p = 0;

ta=DateTime.now();
p = searchPrimes(2, N);
tb=DateTime.now();
puts("time: ", Math.round(DateTime.milliseconds(tb-ta))*0.001, " seconds, primes: ", p);

ta=DateTime.now();
p = primes(N);
tb=DateTime.now();
puts("time: ", Math.round(DateTime.milliseconds(tb-ta))*0.001, " seconds, primes: ", p);

ta=DateTime.now();
p = primes2(N);
tb=DateTime.now();
puts("time: ", Math.round(DateTime.milliseconds(tb-ta))*0.001, " seconds, primes: ", p);
